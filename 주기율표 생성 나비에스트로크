import numpy as np
import matplotlib.pyplot as plt

# 파라미터 정의
D = 1.0    # 확산 계수
dt = 0.01  # 시간 간격
steps = 100 # 시뮬레이션 스텝 수

# 격자 생성
x = np.linspace(0, 10, 100)
y = np.linspace(0, 10, 100)
X, Y = np.meshgrid(x, y)

# 초기 조건
u = np.sin(2 * np.pi * X / 10) * np.cos(2 * np.pi * Y / 10)
u_history = [u.copy()]  # 시간에 따른 변화 저장

# 비선형 반응항
def reaction(u):
    return u * (1 - u**2)

# 시간 발전
for _ in range(steps):
    # 라플라시안 계산 (확산항)
    laplacian = np.gradient(np.gradient(u, axis=0), axis=0) + \
                np.gradient(np.gradient(u, axis=1), axis=1)
    
    # 반응-확산 방정식 적용
    u += dt * (D * laplacian + reaction(u))
    u_history.append(u.copy())

# 시각화
fig, axes = plt.subplots(2, 2, figsize=(12, 12))

# 1. 초기 상태
im1 = axes[0, 0].imshow(u_history[0], extent=(0, 10, 0, 10), cmap='viridis')
axes[0, 0].set_title('Initial State')
plt.colorbar(im1, ax=axes[0, 0])

# 2. 최종 상태
im2 = axes[0, 1].imshow(u_history[-1], extent=(0, 10, 0, 10), cmap='viridis')
axes[0, 1].set_title('Final State')
plt.colorbar(im2, ax=axes[0, 1])

# 3. 중간 상태 (50%)
mid_idx = len(u_history) // 2
im3 = axes[1, 0].imshow(u_history[mid_idx], extent=(0, 10, 0, 10), cmap='viridis')
axes[1, 0].set_title('Intermediate State (50%)')
plt.colorbar(im3, ax=axes[1, 0])

# 4. 시간에 따른 평균값 변화
time_average = [np.mean(u) for u in u_history]
axes[1, 1].plot(range(len(time_average)), time_average)
axes[1, 1].set_title('Average Value Over Time')
axes[1, 1].set_xlabel('Time Step')
axes[1, 1].set_ylabel('Average Value')

plt.tight_layout()
plt.show()
